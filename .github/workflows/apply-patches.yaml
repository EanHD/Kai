name: Apply Incoming Patches

on:
  push:
    paths:
      - 'patches/**/*.diff'
      - 'patches/**/*.patch'

permissions:
  contents: write
  pull-requests: write

jobs:
  apply-patch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine latest patch in this push
        id: find
        shell: bash
        run: |
          set -e
          FILES="$(git diff --name-only HEAD^ HEAD | grep -E '^patches/.*\.(diff|patch)$' || true)"
          if [ -z "$FILES" ]; then
            echo "No patch files changed in this push."
            exit 0
          fi
          # pick the last changed patch in this push
          FILE="$(echo "$FILES" | tail -n1)"
          echo "patch_file=$FILE" >> "$GITHUB_OUTPUT"

      - name: Stop if no patch found
        if: ${{ steps.find.outputs.patch_file == '' }}
        run: echo "No patch to process."

      - name: Create working branch
        if: ${{ steps.find.outputs.patch_file != '' }}
        id: branch
        run: |
          BRANCH="bot/patch-$(date +%Y%m%d-%H%M%S)"
          echo "branch=$BRANCH" >> "$GITHUB_OUTPUT"
          git checkout -b "$BRANCH"

      - name: Apply patch
        if: ${{ steps.find.outputs.patch_file != '' }}
        run: |
          git apply --whitespace=fix "${{ steps.find.outputs.patch_file }}"

      - name: Commit changes
        if: ${{ steps.find.outputs.patch_file != '' }}
        run: |
          git add -A
          git config user.name "kai-bot"
          git config user.email "bot@users.noreply.github.com"
          git commit -m "Apply patch ${{ steps.find.outputs.patch_file }}"

      - name: Create Pull Request
        if: ${{ steps.find.outputs.patch_file != '' }}
        uses: peter-evans/create-pull-request@v6
        with:
          title: "Apply patch: ${{ steps.find.outputs.patch_file }}"
          body: "Automated PR created from ${{ steps.find.outputs.patch_file }}."
          commit-message: "Apply patch ${{ steps.find.outputs.patch_file }}"
          branch: ${{ steps.branch.outputs.branch }}
          base: main